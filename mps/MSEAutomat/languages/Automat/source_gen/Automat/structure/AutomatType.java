package Automat.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum AutomatType {
  beverages("beverages", "beverages"),
  snacks("snacks", "snacks");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<AutomatType> getConstants() {
    List<AutomatType> list = ListSequence.fromList(new LinkedList<AutomatType>());
    ListSequence.fromList(list).addElement(AutomatType.beverages);
    ListSequence.fromList(list).addElement(AutomatType.snacks);
    return list;
  }

  public static AutomatType getDefault() {
    return null;
  }

  public static AutomatType parseValue(String value) {
    if (value == null) {
      return AutomatType.getDefault();
    }
    if (value.equals(AutomatType.beverages.getValueAsString())) {
      return AutomatType.beverages;
    }
    if (value.equals(AutomatType.snacks.getValueAsString())) {
      return AutomatType.snacks;
    }
    return AutomatType.getDefault();
  }

  private String myValue;

  AutomatType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
